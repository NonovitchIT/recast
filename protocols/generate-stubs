#! /usr/bin/env bash
################################################################################
# Generate GRPC stubs for the playcloud project.
################################################################################

readonly DATA_DIRECTORY="$(dirname ${BASH_SOURCE[0]})"
readonly DEFAULT_PROTO_FILE="${DATA_DIRECTORY}/playcloud.proto"

function print_usage {
  echo -e "usage: $0 [<file>]\n"
  echo -e "Generates GRPC stubs for java-proxy, dummy-proxy and pycoder from a GRPC service deifnition file.\n"
  echo -e "If no file is passed, the script defaults to ${DEFAULT_PROTO_FILE}\n"
  echo -e "Options:"
  echo -e "\t-h      Print this help message"
}

while getopts ":h" opt; do
  case $opt in
    h)
      echo "YOLO"
      print_usage
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      print_usage
      exit 1
      ;;
  esac
done


if [[ "${#}" -gt 1 ]]; then
	print_usage
	exit 0
fi

PROTO="${DEFAULT_PROTO_FILE}"

if [[ "${#}" -eq 1 ]]; then
  PROTO="${1}"
  if [[ ! -f "${PROTO}" ]]; then
	echo "File ${PROTO} could not be found" >&2
	print_usage
	exit 1
  fi
fi

echo "PROTO=${PROTO}"

protoc -I . --python_out=../pycoder/ --grpc_out=pycoder/ --plugin=protoc-gen-grpc="${GRPC_ROOT}"/bins/opt/grpc_python_plugin "${PROTO}"
protoc -I . --python_out=../py-proxy/ --grpc_out=py-proxy/ --plugin=protoc-gen-grpc="${GRPC_ROOT}"/bins/opt/grpc_python_plugin "${PROTO}"
protoc -I . --java_out=../java-proxy/src/main/java --grpc-java_out=../java-proxy/src/main/java --plugin=protoc-gen-grpc-java="${GRPC_JAVA_ROOT}"/compiler/build/binaries/java_pluginExecutable/protoc-gen-grpc-java "${PROTO}"
